alias watch='watch '
alias ls='ls --color=auto'
alias grep='grep --color=always --exclude-dir=\*.svn\*'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias nose='nosetests -sxv --with-doctest'
alias is='ssh -l root'
alias tmux="tmux -2"
alias nm-applet-i3="i3-msg exec nm-applet"

alias git-clean='git pull --rebase && git pull --prune && git branch --merged | grep -v "\*" | xargs -n 1 git branch -d'
alias git-branch='echo ''${$(git symbolic-ref -q HEAD || git name-rev --name-only --no-undefined --always HEAD)#(refs/heads/|tags/)}'''
alias git-open-mr='git push -u origin $(git-branch)'

function git-black() {
  git status --short | grep --color=never '.py$' | awk '{print $2}' | xargs black
}

function git-black-master() {
  git diff --name-only  master | grep --color=never '.py$' | xargs black
}

function git-co() {
  git branch | grep --color=never $1 | xargs git checkout
}

alias deb-clean='sudo rm -rf debian *.deb && sudo rm -rf build && git checkout debian'
alias pyc-clean='find . -name "*.pyc" -exec rm -rf {} \;'
alias fix-ssh-agent='eval $(gnome-keyring-daemon -r) && export SSH_AUTH_SOCK && export GNOME_KEYRING_CONTROL'

alias potage='python setup.py develop && python setup.py extract_messages && python setup.py update_catalog && python setup.py compile_catalog'
alias pyclean='find . -name "*.pyc" -delete'

alias vi=/bin/nvim
alias vim=/bin/nvim

#alias fig='docker-compose'
alias dc='docker-compose'
alias dc-images='dc config --services | sort'
alias docker-kill-all='docker kill $(docker ps -q)'
alias docker-purge='docker rm $(docker ps -a -q)'
alias docker-purge-i='docker rmi $(docker images -q -f dangling=true)'
# alias docker-purge-all='docker rmi $(docker images -q)'
alias docker-clean="docker-kill-all || true && docker-purge" 
alias docker-stats='docker stats $(docker ps -q)'

alias docker-reset='sudo systemctl stop docker && cd /var/lib/docker && sudo btrfs subvolume delete $(sudo btrfs subvolume list /var/lib/docker | awk '"'"'{print $9}'"'"') && sudo rm -rf /var/lib/docker/* && sudo systemctl start docker'

function dc-respawn() {
  for container in $@; do
    dc kill $container && dc rm -f $container && dc up -d $container
  done
  dc logs -f $@
}

function dc-ip() {
  for container in $@; do
    echo -n "$container: "
    docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' "$(basename $(pwd))_${container}_1"
  done
}


alias dotdeb-serve='docker run -t -i -v ${HOME}/workspace/aptly/repo:/aptly \
    --name "repository.aptly"\
    -v ${HOME}/workspace/aptly/root:/root \
    -p 8765:8765 \
    mardiros/dotdeb \
    aptly serve -listen=:8765'

alias dotdeb='docker run -t -i -v ${HOME}/workspace/aptly/repo:/aptly \
    --link "repository.aptly:repository.aptly"\
    -v ${HOME}/workspace/aptly/root:/root \
    -v $(pwd):/mnt \
    -v /dev/urandom:/dev/random \
    -v ${HOME}/workspace/aptly/sources.list.d:/etc/apt/sources.list.d \
    mardiros/dotdeb'

alias dotdeb-publish='dotdeb aptly -architectures=amd64 repo add aptly-release *.deb || true && dotdeb aptly publish update wheezy'

alias neomutt-dark='ln -s ~/.config/neomutt/color.dark ~/.config/neomutt/color && neomutt'
alias neomutt-light='ln -s ~/.config/neomutt/color.light ~/.config/neomutt/color && neomutt'

function dive() {
  dive3 || dive2
}

function dive2() {
  [[ -e ./venv2 ]] && . ./venv2/bin/activate
}

function dive3() {
  [[ -e ./venv3 ]] && . ./venv3/bin/activate
}

alias divec='dive && code .'

